{{- if and .Values.postgresql.enabled (not .Values.postgresql.auth.existingSecret) }}
{{- $secretName := include "klask.postgresql.secretName" . }}
{{- $existingSecret := lookup "v1" "Secret" .Release.Namespace $secretName }}
apiVersion: v1
kind: Secret
metadata:
  name: {{ $secretName }}
  labels:
    {{- include "klask.postgresql.labels" . | nindent 4 }}
  annotations:
    "helm.sh/resource-policy": keep
type: Opaque
data:
  {{- if $existingSecret }}
  # Preserve existing passwords across upgrades
  password: {{ index $existingSecret.data "password" }}
  postgres-password: {{ index $existingSecret.data "postgres-password" }}
  {{- else }}
  # Generate new random passwords on first install
  password: {{ .Values.postgresql.auth.password | default (randAlphaNum 32) | b64enc | quote }}
  postgres-password: {{ .Values.postgresql.auth.postgresPassword | default (randAlphaNum 32) | b64enc | quote }}
  {{- end }}
{{- end }}
